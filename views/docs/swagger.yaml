definitions:
  domain.CreateViewBody:
    properties:
      description:
        description: 'Description: the description of the view'
        example: Vista para el registro de requerimientos
        type: string
      icon:
        description: 'Description: the icon of the view'
        example: fa fa-table
        type: string
      name:
        description: 'Description: the name of the view'
        example: Requerimientos
        type: string
      url:
        description: 'Description: the url of the view'
        example: /logistics/requirements
        type: string
    required:
    - description
    - icon
    - name
    - url
    type: object
  domain.PaginationResults:
    properties:
      current_page:
        type: integer
      from:
        type: integer
      last_page:
        type: integer
      size_page:
        type: integer
      to:
        type: integer
      total:
        type: integer
    required:
    - current_page
    - last_page
    - size_page
    - total
    type: object
  domain.UpdateViewBody:
    properties:
      description:
        description: 'Description: the description of the view'
        example: Vista para el registro de requerimientos
        type: string
      icon:
        description: 'Description: the icon of the view'
        example: fa fa-table
        type: string
      name:
        description: 'Description: the name of the view'
        example: Requerimientos
        type: string
      url:
        description: 'Description: the url of the view'
        example: /logistics/requirements
        type: string
    required:
    - description
    - icon
    - name
    - url
    type: object
  domain.View:
    properties:
      created_at:
        description: 'Description: the created_at of the view'
        example: "2023-11-10 08:10:00"
        type: string
      description:
        description: 'Description: the description of the view'
        example: Vista para el registro de requerimientos
        type: string
      icon:
        description: 'Description: the icon of the view'
        example: fa fa-table
        type: string
      id:
        description: 'Description: the id of the view'
        example: 739bbbc9-7e93-11ee-89fd-0242ac110016
        type: string
      name:
        description: 'Description: the name of the view'
        example: Requerimientos
        type: string
      url:
        description: 'Description: the url of the view'
        example: /logistics/requirements
        type: string
    required:
    - description
    - icon
    - id
    - name
    - url
    type: object
  errorDomain.LayerErr:
    enum:
    - domain
    - infrastructure
    - interface
    - use_case
    type: string
    x-enum-varnames:
    - Domain
    - Infra
    - Interface
    - UseCase
  errorDomain.LevelErr:
    enum:
    - info
    - warning
    - error
    - fatal
    type: string
    x-enum-varnames:
    - LevelInfo
    - LevelWarning
    - LevelError
    - LevelFatal
  errorDomain.SmartError:
    properties:
      code:
        type: string
      description:
        type: string
      error: {}
      function:
        type: string
      httpStatus:
        type: integer
      layer:
        $ref: '#/definitions/errorDomain.LayerErr'
      level:
        $ref: '#/definitions/errorDomain.LevelErr'
      messages:
        items:
          type: string
        type: array
      raw:
        type: string
    type: object
  httpResponse.IdResult:
    properties:
      data:
        example: "201"
        type: string
      status:
        type: integer
    required:
    - data
    - status
    type: object
  httpResponse.StatusResult:
    properties:
      status:
        example: 200
        type: integer
    required:
    - status
    type: object
  rest.deleteViewsResult:
    properties:
      data:
        type: boolean
      status:
        type: integer
    required:
    - data
    - status
    type: object
  rest.viewsResult:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.View'
        type: array
      pagination:
        $ref: '#/definitions/domain.PaginationResults'
      status:
        type: integer
    required:
    - data
    - pagination
    - status
    type: object
info:
  contact: {}
paths:
  /api/v1/core/modules/{moduleId}/views:
    get:
      consumes:
      - application/json
      description: get views by module
      parameters:
      - description: role id
        in: path
        name: moduleId
        required: true
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: size page
        in: query
        name: size_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            $ref: '#/definitions/rest.viewsResult'
        "500":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorDomain.SmartError'
      security:
      - BearerAuth: []
      summary: get views by module
      tags:
      - Views
    post:
      consumes:
      - application/json
      description: Create view
      parameters:
      - description: Create view body
        in: body
        name: createViewBody
        required: true
        schema:
          $ref: '#/definitions/domain.CreateViewBody'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            $ref: '#/definitions/httpResponse.IdResult'
        "500":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorDomain.SmartError'
      security:
      - BearerAuth: []
      summary: Create view
      tags:
      - Views
  /api/v1/core/modules/{moduleId}/views/{viewId}:
    delete:
      consumes:
      - application/json
      description: Delete view
      parameters:
      - description: view id
        in: path
        name: viewId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            $ref: '#/definitions/rest.deleteViewsResult'
        "500":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorDomain.SmartError'
      security:
      - BearerAuth: []
      summary: Delete a view
      tags:
      - Views
    put:
      consumes:
      - application/json
      description: Update view
      parameters:
      - description: view id
        in: path
        name: viewId
        required: true
        type: string
      - description: Update view body
        in: body
        name: updateViewBody
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateViewBody'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            $ref: '#/definitions/httpResponse.StatusResult'
        "500":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorDomain.SmartError'
      security:
      - BearerAuth: []
      summary: Update view
      tags:
      - Views
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
