// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "description": "Login a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login Body",
                        "name": "loginBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.LoginUserBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success Request",
                        "schema": {
                            "$ref": "#/definitions/rest.LoginUserResult"
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorDomain.SmartError"
                        }
                    }
                }
            }
        },
        "/api/v1/core/users": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "Create user body",
                        "name": "createUserBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateUserBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success Request",
                        "schema": {
                            "$ref": "#/definitions/httpResponse.IdResult"
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorDomain.SmartError"
                        }
                    }
                }
            }
        },
        "/api/v1/core/users/": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "get users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user type id",
                        "name": "type_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the username of the user",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the role id of the user",
                        "name": "role_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Request",
                        "schema": {
                            "$ref": "#/definitions/rest.multipleUsersResult"
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorDomain.SmartError"
                        }
                    }
                }
            }
        },
        "/api/v1/core/users/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get user me using their token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user me using their token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Request",
                        "schema": {
                            "$ref": "#/definitions/rest.GetMeByUser"
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorDomain.SmartError"
                        }
                    }
                }
            }
        },
        "/api/v1/core/users/me/modules/{codeModule}/permissions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "is a method to list permissions of a user in a module",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "is a method to list permissions of a user in a module",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code module",
                        "name": "codeModule",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Request",
                        "schema": {
                            "$ref": "#/definitions/rest.PermissionsResult"
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorDomain.SmartError"
                        }
                    }
                }
            }
        },
        "/api/v1/core/users/me/permissions/{codePermission}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "is a method to verify permissions of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "is a method to verify permissions of a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "store id",
                        "name": "store_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "code permission",
                        "name": "codePermission",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Request",
                        "schema": {
                            "$ref": "#/definitions/httpResponse.BoolResponse"
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorDomain.SmartError"
                        }
                    }
                }
            }
        },
        "/api/v1/core/users/menu": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get menu by user using their token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get menu by user using their token",
                "responses": {
                    "200": {
                        "description": "Success Request",
                        "schema": {
                            "$ref": "#/definitions/rest.menuByUserResult"
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorDomain.SmartError"
                        }
                    }
                }
            }
        },
        "/api/v1/core/users/{userId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "get user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Request",
                        "schema": {
                            "$ref": "#/definitions/rest.userResult"
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorDomain.SmartError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update user body",
                        "name": "updateUserBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdateUserBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Request",
                        "schema": {
                            "$ref": "#/definitions/httpResponse.StatusResult"
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorDomain.SmartError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Request",
                        "schema": {
                            "$ref": "#/definitions/rest.deleteUsersResult"
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorDomain.SmartError"
                        }
                    }
                }
            }
        },
        "/api/v1/core/users/{userId}/menu": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get menu by user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "get menu",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Request",
                        "schema": {
                            "$ref": "#/definitions/rest.menuByUserResult"
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorDomain.SmartError"
                        }
                    }
                }
            }
        },
        "/api/v1/core/users/{userId}/password": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Reset password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Reset password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Request",
                        "schema": {
                            "$ref": "#/definitions/rest.ResetPasswordUserResult"
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorDomain.SmartError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.CreateUserBody": {
            "type": "object",
            "required": [
                "password",
                "type_id",
                "username"
            ],
            "properties": {
                "password": {
                    "description": "Description: the password of the user",
                    "type": "string",
                    "example": "pepitoPass"
                },
                "person": {
                    "$ref": "#/definitions/domain.Person"
                },
                "person_id": {
                    "description": "Description: the person id",
                    "type": "string",
                    "example": "739bbbc9-7e93-11ee-89fd-0442ac210932"
                },
                "type_id": {
                    "description": "Description: the type of the user",
                    "type": "string",
                    "example": "739bbbc9-7e93-11ee-89fd-0442ac210931"
                },
                "username": {
                    "description": "Description: the username of the user",
                    "type": "string",
                    "example": "pepito.quispe@smartc.pe"
                }
            }
        },
        "domain.LoginUserBody": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "description": "Description: the password of the user",
                    "type": "string",
                    "example": "pepitoPass"
                },
                "username": {
                    "description": "Description: the username of the user",
                    "type": "string",
                    "example": "pepito.quispe@smartc.pe"
                }
            }
        },
        "domain.MenuModule": {
            "type": "object",
            "required": [
                "code",
                "description",
                "icon",
                "id",
                "name",
                "position",
                "views"
            ],
            "properties": {
                "code": {
                    "description": "Description: The code of the menu user",
                    "type": "string",
                    "example": "logistic"
                },
                "created_at": {
                    "description": "Description: The date of created the menu user",
                    "type": "string",
                    "example": "2023-11-10 08:10:00"
                },
                "description": {
                    "description": "Description: The description of the menu user",
                    "type": "string",
                    "example": "Modulo de logística"
                },
                "icon": {
                    "description": "Description: The icon of the menu user",
                    "type": "string",
                    "example": "fa fa-chart"
                },
                "id": {
                    "description": "Description: The id of the menu user",
                    "type": "string",
                    "example": "739bbbc9-7e93-11ee-89fd-0242ac110016"
                },
                "modules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.MenuModule"
                    }
                },
                "name": {
                    "description": "Description: The name of the menu user",
                    "type": "string",
                    "example": "Logistic"
                },
                "position": {
                    "description": "Description: The position of the menu user",
                    "type": "integer",
                    "example": 1
                },
                "views": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.ViewMenuUser"
                    }
                }
            }
        },
        "domain.Merchant": {
            "type": "object",
            "required": [
                "description",
                "id",
                "image_path",
                "name"
            ],
            "properties": {
                "description": {
                    "description": "Description: the description of the merchant",
                    "type": "string",
                    "example": "Almacen Central"
                },
                "id": {
                    "description": "Description: the id of the merchant",
                    "type": "string",
                    "example": "739bbbc9-7e93-11ee-89fd-0242ac110016"
                },
                "image_path": {
                    "description": "Description: the image path of the merchant",
                    "type": "string",
                    "example": "/images/almacen-central.jpg"
                },
                "name": {
                    "description": "Description: the name of the merchant",
                    "type": "string",
                    "example": "Almacen Central"
                }
            }
        },
        "domain.MerchantByUser": {
            "type": "object",
            "required": [
                "description",
                "id",
                "image_path",
                "name",
                "stores"
            ],
            "properties": {
                "description": {
                    "description": "Description: the description of the merchant",
                    "type": "string",
                    "example": "Almacen Central"
                },
                "id": {
                    "description": "Description: the id of the merchant",
                    "type": "string",
                    "example": "739bbbc9-7e93-11ee-89fd-0242ac110016"
                },
                "image_path": {
                    "description": "Description: the image path of the merchant",
                    "type": "string",
                    "example": "/images/almacen-central.jpg"
                },
                "name": {
                    "description": "Description: the name of the merchant",
                    "type": "string",
                    "example": "Almacen Central"
                },
                "stores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Store"
                    }
                }
            }
        },
        "domain.PaginationResults": {
            "type": "object",
            "required": [
                "current_page",
                "last_page",
                "size_page",
                "total"
            ],
            "properties": {
                "current_page": {
                    "type": "integer"
                },
                "from": {
                    "type": "integer"
                },
                "last_page": {
                    "type": "integer"
                },
                "size_page": {
                    "type": "integer"
                },
                "to": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "domain.Permissions": {
            "type": "object",
            "required": [
                "code",
                "id"
            ],
            "properties": {
                "code": {
                    "description": "Description: The code of the module",
                    "type": "string",
                    "example": "logistics.requirements"
                },
                "id": {
                    "description": "Description: user id",
                    "type": "string",
                    "example": "0c4001f3-2dd8-4d9f-820d-db7d7d8c85c0"
                }
            }
        },
        "domain.Person": {
            "type": "object",
            "required": [
                "document",
                "enable",
                "names",
                "phone",
                "surname",
                "type_document_id"
            ],
            "properties": {
                "document": {
                    "description": "Description: the document number of the people",
                    "type": "string",
                    "example": "77895428"
                },
                "email": {
                    "description": "Description: the email of the people",
                    "type": "string",
                    "example": "lucyhancco@gmail.com"
                },
                "enable": {
                    "description": "Description: the status of the people",
                    "type": "boolean",
                    "example": true
                },
                "gender": {
                    "description": "Description: the gender of the people",
                    "type": "string",
                    "example": "MASCULINO"
                },
                "last_name": {
                    "description": "Description: the last name of the people",
                    "type": "string",
                    "example": "HUILLCA"
                },
                "names": {
                    "description": "Description: the name of the people",
                    "type": "string",
                    "example": "LUCY ANDREA"
                },
                "phone": {
                    "description": "Description: the phone of the people",
                    "type": "string",
                    "example": "918547496"
                },
                "surname": {
                    "description": "Description: the surname of the people",
                    "type": "string",
                    "example": "HANCCO"
                },
                "type_document_id": {
                    "description": "Description: the type of the document",
                    "type": "string",
                    "example": "00a58522-93b4-11ee-a040-0242ac11000e"
                }
            }
        },
        "domain.PersonByUser": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Description: the date of created of the people",
                    "type": "string",
                    "example": "2023-11-10 08:10:00"
                },
                "document": {
                    "description": "Description: the document number of the people",
                    "type": "string",
                    "example": "77895428"
                },
                "email": {
                    "description": "Description: the email of the people",
                    "type": "string",
                    "example": "lucyhancco@gmail.com"
                },
                "enable": {
                    "description": "Description: the status of the people",
                    "type": "boolean",
                    "example": true
                },
                "gender": {
                    "description": "Description: the gender of the people",
                    "type": "string",
                    "example": "MASCULINO"
                },
                "id": {
                    "description": "Description: the id of the people",
                    "type": "string",
                    "example": "0abbb86f-9836-11ee-a040-0242ac11000e"
                },
                "last_name": {
                    "description": "Description: the last name of the people",
                    "type": "string",
                    "example": "HUILLCA"
                },
                "names": {
                    "description": "Description: the name of the people",
                    "type": "string",
                    "example": "LUCY ANDREA"
                },
                "phone": {
                    "description": "Description: the phone of the people",
                    "type": "string",
                    "example": "918547496"
                },
                "surname": {
                    "description": "Description: the surname of the people",
                    "type": "string",
                    "example": "HANCCO"
                },
                "type_document": {
                    "$ref": "#/definitions/domain.TypeDocument"
                }
            }
        },
        "domain.Role": {
            "type": "object",
            "required": [
                "user_role"
            ],
            "properties": {
                "createdAt": {
                    "description": "Description: the date of created of the role",
                    "type": "string",
                    "example": "2023-11-27 19:47:15"
                },
                "description": {
                    "description": "Description: the description of the role",
                    "type": "string",
                    "example": "Gerencia del conglomerado"
                },
                "id": {
                    "description": "Description: the id of the role",
                    "type": "string",
                    "example": "fcdbfacf-8305-11ee-89fd-0242ac110016"
                },
                "name": {
                    "description": "Description: the id of the role",
                    "type": "string",
                    "example": "Jefe de Area Residual"
                },
                "role_enable": {
                    "description": "Description: enable of the role",
                    "type": "boolean",
                    "example": true
                },
                "user_role": {
                    "$ref": "#/definitions/domain.UserRole"
                }
            }
        },
        "domain.RoleUser": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "created_at": {
                    "description": "Description: date of created",
                    "type": "string",
                    "example": "2023-11-10 08:10:00"
                },
                "description": {
                    "description": "Description: user role description",
                    "type": "string",
                    "example": "Gerencia general"
                },
                "enable": {
                    "description": "Description: user role status",
                    "type": "boolean",
                    "example": true
                },
                "id": {
                    "description": "Description: role user id",
                    "type": "string",
                    "example": "739bbbc9-7e93-11ee-89fd-0242ac110016"
                },
                "name": {
                    "description": "Description:user role name",
                    "type": "string",
                    "example": "Gerencia"
                }
            }
        },
        "domain.Store": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Description: the id of the store",
                    "type": "string",
                    "example": "739bbbc9-7e93-11ee-89fd-0242ac110016"
                },
                "name": {
                    "description": "Description: the name of the store",
                    "type": "string",
                    "example": "Almacen Central"
                }
            }
        },
        "domain.StoreByUser": {
            "type": "object",
            "required": [
                "id",
                "merchant",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Description: the id of the store",
                    "type": "string",
                    "example": "739bbbc9-7e93-11ee-89fd-0242ac110016"
                },
                "merchant": {
                    "$ref": "#/definitions/domain.Merchant"
                },
                "name": {
                    "description": "Description: the name of the store",
                    "type": "string",
                    "example": "Almacen Central"
                }
            }
        },
        "domain.TypeDocument": {
            "type": "object",
            "properties": {
                "abbreviate_description": {
                    "description": "Description: abbreviated description of the type of document",
                    "type": "string",
                    "example": "DNI"
                },
                "created_at": {
                    "description": "Description: the creation date of the document type",
                    "type": "string",
                    "example": "2023-11-10 08:10:00"
                },
                "description": {
                    "description": "Description: description of the type of document",
                    "type": "string",
                    "example": "DOCUMENTO NACIONAL DE IDENTIDAD"
                },
                "enable": {
                    "description": "Description: abbreviated document type status",
                    "type": "boolean",
                    "example": true
                },
                "id": {
                    "description": "Description: id of document type",
                    "type": "string",
                    "example": "739bbbc9-7e93-11ee-89fd-0242ac110016"
                },
                "number": {
                    "description": "Description: document type number",
                    "type": "string",
                    "example": "01"
                }
            }
        },
        "domain.UpdateUserBody": {
            "type": "object",
            "required": [
                "type_id",
                "username"
            ],
            "properties": {
                "person": {
                    "$ref": "#/definitions/domain.Person"
                },
                "person_id": {
                    "description": "Description: the person id",
                    "type": "string",
                    "example": "739bbbc9-7e93-11ee-89fd-0442ac210932"
                },
                "type_id": {
                    "description": "Description: the type of the user",
                    "type": "string",
                    "example": "739bbbc9-7e93-11ee-89fd-0442ac210931"
                },
                "username": {
                    "description": "Description: the username of the user",
                    "type": "string",
                    "example": "pepito.quispe@smartc.pe"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "required": [
                "id",
                "user_type",
                "username"
            ],
            "properties": {
                "created_at": {
                    "description": "Description: date of created",
                    "type": "string",
                    "example": "2023-11-10 08:10:00"
                },
                "id": {
                    "description": "Description: user id",
                    "type": "string",
                    "example": "739bbbc9-7e93-11ee-89fd-0242ac110016"
                },
                "user_type": {
                    "$ref": "#/definitions/domain.UserTypeByUser"
                },
                "username": {
                    "description": "Description: username of the user",
                    "type": "string",
                    "example": "pepito.quispe@smartc.pe"
                }
            }
        },
        "domain.UserMe": {
            "type": "object",
            "required": [
                "id",
                "merchants",
                "roles",
                "stores",
                "username"
            ],
            "properties": {
                "created_at": {
                    "description": "Description: date of created",
                    "type": "string",
                    "example": "2023-11-10 08:10:00"
                },
                "id": {
                    "description": "Description: user id",
                    "type": "string",
                    "example": "739bbbc9-7e93-11ee-89fd-0242ac110016"
                },
                "merchants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.MerchantByUser"
                    }
                },
                "person": {
                    "$ref": "#/definitions/domain.PersonByUser"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.RoleUser"
                    }
                },
                "stores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.StoreByUser"
                    }
                },
                "username": {
                    "description": "Description: username of the user",
                    "type": "string",
                    "example": "pepito.quispe@smartc.pe"
                }
            }
        },
        "domain.UserMultiple": {
            "type": "object",
            "required": [
                "id",
                "role",
                "user_type",
                "username"
            ],
            "properties": {
                "created_at": {
                    "description": "Description: date of created",
                    "type": "string",
                    "example": "2023-11-10 08:10:00"
                },
                "id": {
                    "description": "Description: user id",
                    "type": "string",
                    "example": "739bbbc9-7e93-11ee-89fd-0242ac110016"
                },
                "role": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Role"
                    }
                },
                "user_type": {
                    "$ref": "#/definitions/domain.UserTypeByUser"
                },
                "username": {
                    "description": "Description: username of the user",
                    "type": "string",
                    "example": "pepito.quispe@smartc.pe"
                }
            }
        },
        "domain.UserRole": {
            "type": "object",
            "properties": {
                "user_role_id": {
                    "description": "Description: the id of the use role",
                    "type": "string",
                    "example": "b36f266d-8492-4f0e-8ecb-fef20e098970"
                }
            }
        },
        "domain.UserTypeByUser": {
            "type": "object",
            "required": [
                "code",
                "description",
                "id"
            ],
            "properties": {
                "code": {
                    "description": "Description: the code of the user",
                    "type": "string",
                    "example": "USER_EXTERNAL"
                },
                "description": {
                    "description": "Description: the description of the user",
                    "type": "string",
                    "example": "Usuario externo"
                },
                "id": {
                    "description": "Description: the id of the user",
                    "type": "string",
                    "example": "739bbbc9-7e93-11ee-89fd-0242ac113421"
                }
            }
        },
        "domain.ViewMenuUser": {
            "type": "object",
            "required": [
                "description",
                "icon",
                "id",
                "name",
                "url"
            ],
            "properties": {
                "created_at": {
                    "description": "Description: the date of created the view menu user",
                    "type": "string",
                    "example": "2023-11-10 08:10:00"
                },
                "description": {
                    "description": "Description: the description of the view menu user",
                    "type": "string",
                    "example": "Vista de requerimientos"
                },
                "icon": {
                    "description": "Description: the icon in for the view menu user",
                    "type": "string",
                    "example": "fa fa-chart"
                },
                "id": {
                    "description": "Description: the id of the view menu user",
                    "type": "string",
                    "example": "739bbbc9-7e93-11ee-89fd-0242ac110000"
                },
                "name": {
                    "description": "Description: the name of the view menu user",
                    "type": "string",
                    "example": "Requerimientos"
                },
                "url": {
                    "description": "Description: the url of the view menu user",
                    "type": "string",
                    "example": "/logistics/requirements"
                }
            }
        },
        "errorDomain.LayerErr": {
            "type": "string",
            "enum": [
                "domain",
                "infrastructure",
                "interface",
                "use_case"
            ],
            "x-enum-varnames": [
                "Domain",
                "Infra",
                "Interface",
                "UseCase"
            ]
        },
        "errorDomain.LevelErr": {
            "type": "string",
            "enum": [
                "info",
                "warning",
                "error",
                "fatal"
            ],
            "x-enum-varnames": [
                "LevelInfo",
                "LevelWarning",
                "LevelError",
                "LevelFatal"
            ]
        },
        "errorDomain.SmartError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "error": {},
                "function": {
                    "type": "string"
                },
                "httpStatus": {
                    "type": "integer"
                },
                "layer": {
                    "$ref": "#/definitions/errorDomain.LayerErr"
                },
                "level": {
                    "$ref": "#/definitions/errorDomain.LevelErr"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "raw": {
                    "type": "string"
                }
            }
        },
        "httpResponse.BoolResponse": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "boolean"
                }
            }
        },
        "httpResponse.IdResult": {
            "type": "object",
            "required": [
                "data",
                "status"
            ],
            "properties": {
                "data": {
                    "type": "string",
                    "example": "201"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "httpResponse.StatusResult": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "rest.GetMeByUser": {
            "type": "object",
            "required": [
                "data",
                "status"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.UserMe"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "rest.LoginUserResult": {
            "type": "object",
            "required": [
                "data",
                "status"
            ],
            "properties": {
                "data": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "rest.PermissionsResult": {
            "type": "object",
            "required": [
                "data",
                "status"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Permissions"
                    }
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "rest.ResetPasswordUserResult": {
            "type": "object",
            "required": [
                "data",
                "status"
            ],
            "properties": {
                "data": {
                    "type": "boolean"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "rest.deleteUsersResult": {
            "type": "object",
            "required": [
                "data",
                "status"
            ],
            "properties": {
                "data": {
                    "type": "boolean"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "rest.menuByUserResult": {
            "type": "object",
            "required": [
                "data",
                "status"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.MenuModule"
                    }
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "rest.multipleUsersResult": {
            "type": "object",
            "required": [
                "data",
                "pagination",
                "status"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.UserMultiple"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/domain.PaginationResults"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "rest.userResult": {
            "type": "object",
            "required": [
                "data",
                "status"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.User"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
